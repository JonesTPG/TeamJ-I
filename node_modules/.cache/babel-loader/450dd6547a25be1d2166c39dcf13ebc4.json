{"ast":null,"code":"import _classCallCheck from \"/home/joonas/LUT/programming/CodeCamp/TeamJ-I/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/joonas/LUT/programming/CodeCamp/TeamJ-I/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/joonas/LUT/programming/CodeCamp/TeamJ-I/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/joonas/LUT/programming/CodeCamp/TeamJ-I/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/joonas/LUT/programming/CodeCamp/TeamJ-I/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/joonas/LUT/programming/CodeCamp/TeamJ-I/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/home/joonas/LUT/programming/CodeCamp/TeamJ-I/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/joonas/LUT/programming/CodeCamp/TeamJ-I/src/components/courses.jsx\";\nimport React, { Component } from \"react\";\nimport SelectedCourse from \"./selectedcourse\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\n\nvar axios = require(\"axios\");\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"50%\",\n      maxWidth: 650,\n      maxHeight: 400,\n      backgroundColor: theme.palette.background.paper\n    },\n    search: _defineProperty({\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\"\n    }, theme.breakpoints.up(\"sm\"), {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }),\n    searchIcon: {\n      width: theme.spacing.unit * 9,\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\",\n      width: \"100%\"\n    },\n    inputInput: _defineProperty({\n      paddingTop: theme.spacing.unit,\n      paddingRight: theme.spacing.unit,\n      paddingBottom: theme.spacing.unit,\n      paddingLeft: theme.spacing.unit * 10,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\"\n    }, theme.breakpoints.up(\"sm\"), {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    })\n  };\n};\n\nvar Courses =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Courses, _Component);\n\n  function Courses(props) {\n    var _this;\n\n    _classCallCheck(this, Courses);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Courses).call(this, props));\n\n    _this.getDataFromDb = function () {\n      axios.get(\"/api/all\").then(function (response) {\n        console.log(response.data);\n        var data = JSON.parse(response.data);\n\n        _this.setState({\n          courses: data\n        });\n      });\n    };\n\n    _this.handleToggle = function () {\n      _this.setState({\n        checked: !_this.state.checked\n      });\n    };\n\n    _this.state = {\n      checked: true,\n      courses: null,\n      filter: \"\",\n      selectedCourse: null,\n      course_id: null //stores the currently selected course id\n\n    };\n    _this.setFilter = _this.setFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setSelectedCourse = _this.setSelectedCourse.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // fetch data from mlab database, add to courses\n\n\n  _createClass(Courses, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getDataFromDb();\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(e) {\n      this.setState({\n        filter: e.target.value\n      });\n    }\n  }, {\n    key: \"setSelectedCourse\",\n    value: function setSelectedCourse(course) {\n      this.setState({\n        course_id: course\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n\n      if (this.state.courses === null) {\n        return \"loading\";\n      }\n\n      var filtered = this.state.courses.filter(function (course) {\n        return course.coursename.toLowerCase().indexOf(_this2.state.filter.toLowerCase()) !== -1;\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"fixed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: \"appbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.searchIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(SearchIcon, {\n        className: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(InputBase, {\n        className: \"search\",\n        value: this.state.filter,\n        onChange: this.setFilter,\n        placeholder: \"Etsi...\",\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"course-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(List, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, filtered.map(function (course) {\n        return React.createElement(\"div\", {\n          className: \"listElement\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          key: course._id,\n          onClick: function onClick() {\n            return _this2.setSelectedCourse(course._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, course.courseid, \" \", course.coursename, React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: _this2.state.isChecked,\n          onChange: _this2.handleToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }))), React.createElement(Divider, {\n          light: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }));\n      })), React.createElement(SelectedCourse, {\n        courseid: this.state.course_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Courses;\n}(Component);\n\nCourses.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Courses);","map":{"version":3,"sources":["/home/joonas/LUT/programming/CodeCamp/TeamJ-I/src/components/courses.jsx"],"names":["React","Component","SelectedCourse","AppBar","Toolbar","List","PropTypes","withStyles","ListItem","ListItemSecondaryAction","Checkbox","Divider","SearchIcon","InputBase","fade","axios","require","styles","theme","root","width","maxWidth","maxHeight","backgroundColor","palette","background","paper","search","position","borderRadius","shape","common","white","marginLeft","breakpoints","up","spacing","unit","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","Courses","props","getDataFromDb","get","then","response","console","log","data","JSON","parse","setState","courses","handleToggle","checked","state","filter","selectedCourse","course_id","setFilter","bind","setSelectedCourse","e","target","value","course","classes","filtered","coursename","toLowerCase","indexOf","input","map","_id","courseid","isChecked","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SelectedCourse from \"./selectedcourse\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\n\nconst axios = require(\"axios\");\n\nconst styles = theme => ({\n  root: {\n    width: \"50%\",\n    maxWidth: 650,\n    maxHeight: 400,\n    backgroundColor: theme.palette.background.paper\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n});\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checked: true,\n      courses: null,\n      filter: \"\",\n      selectedCourse: null,\n      course_id: null //stores the currently selected course id\n    };\n    this.setFilter = this.setFilter.bind(this);\n    this.setSelectedCourse = this.setSelectedCourse.bind(this);\n  }\n\n  // fetch data from mlab database, add to courses\n  componentDidMount() {\n    this.getDataFromDb();\n  }\n\n  getDataFromDb = () => {\n    axios.get(\"/api/all\").then(response => {\n      console.log(response.data);\n      var data = JSON.parse(response.data);\n      this.setState({\n        courses: data\n      });\n    });\n  };\n\n  handleToggle = () => {\n    this.setState({\n      checked: !this.state.checked\n    });\n  };\n\n  setFilter(e) {\n    this.setState({ filter: e.target.value });\n  }\n\n  setSelectedCourse(course) {\n    this.setState({ course_id: course });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    if (this.state.courses === null) {\n      return \"loading\";\n    }\n    const filtered = this.state.courses.filter(\n      course =>\n        course.coursename\n          .toLowerCase()\n          .indexOf(this.state.filter.toLowerCase()) !== -1\n    );\n\n    return (\n      <React.Fragment>\n        {\" \"}\n        <div>\n          <div>\n            <AppBar position=\"fixed\">\n              <Toolbar className=\"appbar\">\n                <div className={classes.search}>\n                  <div className={classes.searchIcon}>\n                    <SearchIcon className=\"search\" />\n                  </div>\n                  <InputBase\n                    className=\"search\"\n                    value={this.state.filter}\n                    onChange={this.setFilter}\n                    placeholder=\"Etsi...\"\n                    classes={{\n                      root: classes.inputRoot,\n                      input: classes.inputInput\n                    }}\n                  />\n                </div>\n              </Toolbar>\n            </AppBar>\n          </div>\n\n          <div className=\"course-container\">\n            <List className={classes.root}>\n              {filtered.map(course => (\n                <div className=\"listElement\">\n                  <ListItem\n                    key={course._id}\n                    onClick={() => this.setSelectedCourse(course._id)}\n                  >\n                    {course.courseid} {course.coursename}\n                    <ListItemSecondaryAction>\n                      <Checkbox\n                        checked={this.state.isChecked}\n                        onChange={this.handleToggle}\n                      />\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                  <Divider light />\n                </div>\n              ))}\n            </List>\n            <SelectedCourse courseid={this.state.course_id} />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nCourses.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Courses);\n"]},"metadata":{},"sourceType":"module"}